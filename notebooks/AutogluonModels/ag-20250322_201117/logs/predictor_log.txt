Frequency '1min' stored as 'min'
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'c:\Users\yaloo\QuestradeCustomWrapper\notebooks\AutogluonModels\ag-20250322_201117'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.12.4
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          22
GPU Count:          0
Memory Avail:       3.72 GB / 15.37 GB (24.2%)
Disk Space Avail:   533.65 GB / 951.93 GB (56.1%)
===================================================
Setting presets to: fast_training

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MAPE,
 'freq': 'min',
 'hyperparameters': 'default',
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 7,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 42,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'close',
 'time_limit': 300,
 'verbosity': 2}

train_data with frequency 'None' has been resampled to frequency 'min'.
Provided train_data has 824194 rows (NaN fraction=66.3%), 7 time series. Median time series length is 117780 (min=117514, max=117780). 

Provided data contains following columns:
	target: 'close'
	past_covariates:
		categorical:        ['interval']
		continuous (float): ['low', 'high', 'open', 'volume', 'VWAP']

AutoGluon will ignore following non-numeric/non-informative columns:
	ignored covariates:      ['end']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MAPE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-03-22 16:11:20
Models that will be trained: ['SeasonalNaive', 'RecursiveTabular', 'DirectTabular', 'NPTS', 'DynamicOptimizedTheta', 'AutoETS', 'ChronosZeroShot[bolt_base]', 'ChronosFineTuned[bolt_small]', 'TemporalFusionTransformer', 'DeepAR', 'PatchTST', 'TiDE']
Training timeseries model SeasonalNaive. Training for up to 22.9s of the 298.0s of remaining time.
	-0.0243       = Validation score (-MAPE)
	0.78    s     = Training runtime
	5.04    s     = Validation (prediction) runtime
Training timeseries model RecursiveTabular. Training for up to 24.3s of the 292.1s of remaining time.
	-0.0004       = Validation score (-MAPE)
	14.12   s     = Training runtime
	1.19    s     = Validation (prediction) runtime
Training timeseries model DirectTabular. Training for up to 25.2s of the 276.8s of remaining time.
	-0.0010       = Validation score (-MAPE)
	18.35   s     = Training runtime
	2.77    s     = Validation (prediction) runtime
Training timeseries model NPTS. Training for up to 25.6s of the 255.7s of remaining time.
	-0.0122       = Validation score (-MAPE)
	0.67    s     = Training runtime
	2.85    s     = Validation (prediction) runtime
Training timeseries model DynamicOptimizedTheta. Training for up to 28.0s of the 252.1s of remaining time.
	Time limit exceeded... Skipping DynamicOptimizedTheta.
Training timeseries model AutoETS. Training for up to 27.9s of the 223.2s of remaining time.
	-0.0003       = Validation score (-MAPE)
	0.96    s     = Training runtime
	6.65    s     = Validation (prediction) runtime
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 30.8s of the 215.6s of remaining time.
	-0.0006       = Validation score (-MAPE)
	0.53    s     = Training runtime
	2.76    s     = Validation (prediction) runtime
Training timeseries model ChronosFineTuned[bolt_small]. Training for up to 35.4s of the 212.3s of remaining time.
	Skipping covariate_regressor since the dataset contains no covariates or static features.
	Fine-tuning on the CPU detected. We recommend using a GPU for faster fine-tuning of Chronos.
